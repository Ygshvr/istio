# `name` value will appear "as is" in the badge.
# See https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#adding-a-workflow-status-badge-to-your-repository
name: "build"

on:
  push:
    branches:
    - tcc
  pull_request:
    branches:
    - '**'

jobs:

  config:
    runs-on: ubuntu-latest

    outputs:
      image: ${{ steps.config.outputs.image }}

    steps:
    - id: config
      run: echo "::set-output name=image::docker.io/tetrate/build-tools:release-1.7-2020-11-18T23-24-38" # ISTIO_BUILD_TOOLS

  build:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # fetch all history for all tags and branches

    - run: make -e T=-v build binaries-test

  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - run: make -e T=-v init racetest

  release:
    needs: config
    runs-on: [self-hosted, linux, x64, medium] # we use a self-host runner here to get more disk space

    container:
      image: ${{ needs.config.outputs.image }} # ISTIO_BUILD_TOOLS
      env:
        BUILD_WITH_CONTAINER: "0"

    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # fetch all history for all tags and branches

    - name: "Docker login"
      env:
        DOCKER_HUB_USER: ${{ secrets.TETRATE_CI_DOCKER_HUB_USER }}
        DOCKER_HUB_PASSWORD: ${{ secrets.TETRATE_CI_DOCKER_HUB_PASSWORD }}
      run: docker login --username "${DOCKER_HUB_USER}" --password "${DOCKER_HUB_PASSWORD}"

    - env:
        DOCKER_HUB: ${{ secrets.TETRATE_CI_DOCKER_HUB }}
        PUBLISH_GCS: "0" # don't publish release artifacts to GCS
      run: prow/release-commit.sh

  lint:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - run: make lint

  gencheck:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - run: make gen-check

  integ-galley-k8s-tests:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        TEST_SELECT: -postsubmit,-flaky,-multicluster
      run: prow/integ-suite-kind.sh test.integration.galley.kube.presubmit

  integ-mixer-k8s-tests:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        TEST_SELECT: -postsubmit,-flaky,-multicluster
      run: prow/integ-suite-kind.sh test.integration.mixer.kube.presubmit

  integ-pilot-k8s-tests:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        TEST_SELECT: -postsubmit,-flaky,-multicluster
      run: prow/integ-suite-kind.sh test.integration.pilot.kube.presubmit

  integ-security-k8s-tests:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        TEST_SELECT: -postsubmit,-flaky,-multicluster
      run: prow/integ-suite-kind.sh test.integration.security.kube.presubmit

  integ-telemetry-k8s-tests:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        TEST_SELECT: -postsubmit,-flaky,-multicluster
      run: prow/integ-suite-kind.sh test.integration.telemetry.kube.presubmit

  integ-multicluster-k8s-tests:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        TEST_SELECT: -postsubmit,-flaky,+multicluster
      run: prow/integ-suite-kind.sh --topology MULTICLUSTER test.integration.multicluster.kube.presubmit

  integ-distroless-k8s-tests:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        VARIANT: distroless
        TEST_SELECT: -multicluster
      run: prow/integ-suite-kind.sh test.integration.kube.reachability

  integ-ipv6-k8s-tests:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        DOCKER_IN_DOCKER_IPV6_ENABLED: true
        IP_FAMILY: ipv6
        TEST_SELECT: -multicluster
      run: prow/integ-suite-kind.sh test.integration.kube.reachability

  integ-operator-controller-tests:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        TEST_SELECT: -postsubmit,-flaky,-multicluster
      run: prow/integ-suite-kind.sh test.integration.operator.kube.presubmit

  integ-galley-k8s-tests-postsubmit:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        TEST_SELECT: -multicluster
      run: prow/integ-suite-kind.sh test.integration.galley.kube

  integ-mixer-k8s-tests-postsubmit:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        TEST_SELECT: -multicluster
      run: prow/integ-suite-kind.sh test.integration.mixer.kube

  integ-pilot-k8s-tests-postsubmit:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        TEST_SELECT: -multicluster
      run: prow/integ-suite-kind.sh test.integration.pilot.kube

  integ-security-k8s-tests-postsubmit:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        TEST_SELECT: -multicluster
      run: prow/integ-suite-kind.sh test.integration.security.kube

  integ-telemetry-k8s-tests-postsubmit:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        TEST_SELECT: -multicluster
      run: prow/integ-suite-kind.sh test.integration.telemetry.kube

  integ-k8s-115:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        INTEGRATION_TEST_FLAGS: --istio.test.retries=1
      run: prow/integ-suite-kind.sh --node-image kindest/node:v1.15.12 test.integration.kube.presubmit

  integ-k8s-116:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - env:
        INTEGRATION_TEST_FLAGS: --istio.test.retries=1
      run: prow/integ-suite-kind.sh --node-image kindest/node:v1.16.9 test.integration.kube.presubmit

  install-cni-test:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - run: make cni.install-test

name: e2e-tests

on:
  push:
    tags:
      - '*tetrate*'

jobs:
  create-test-images:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    name: create-test-images
    runs-on: ${{ matrix.os }}
    env:
      HUB: hellozee-docker-istio-test.bintray.io

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: docker-login
        uses: docker/login-action@v1
        with:
          registry: hellozee-docker-istio-test.bintray.io
          username: ${{ secrets.BINTRAY_USER }}
          password: ${{ secrets.BINTRAY_API_KEY }}

      - name: build and push images
        run: |
          export TAG=$(git describe --tags)
          make docker push

  eks-e2e-test:
    strategy:
      matrix:
        os: [ ubuntu-latest ]

    name: eks-e2e-test
    runs-on: ${{ matrix.os }}
    needs: [create-test-images]
    env:
      HUB: hellozee-docker-istio-test.bintray.io

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: aws-config
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION  }}

      - name: set up go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15

      - name: eks-cluster-create
        run: bash ./tetrateci/create_eks_cluster.sh

      - name: integration-tests
        run: |
          export TAG=$(git describe --tags)
          go test -tags=integ ./tests/integration/operator/...  -istio.test.skipVM true -p 1  -test.v
          go test -tags=integ ./tests/integration/helm/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ -timeout 30m -run='TestEmptyCluster|TestFileOnly|TestDirectoryWithoutRecursion|TestDirectoryWithRecursion|TestInvalidFileError|TestJsonInputFile|TestJsonOutput|TestKubeOnly|TestFileAndKubeCombined|TestAllNamespaces|TestTimeout|TestErrorLine|TestWait|TestVersion|TestDescribe|TestAddToAndRemoveFromMesh|TestProxyConfig|TestProxyStatus|TestAuthZCheck|TestLocality|TestMain|TestMirroring|TestMirroringExternalService|TestTproxy|TestRevisionedUpgrade|TestValidation|TestEnsureNoMissingCRDs|TestWebhook' ./tests/integration/pilot/ -istio.test.skipVM true -p 1 -test.v 
          go test -tags=integ ./tests/integration/pilot/analysis/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ ./tests/integration/pilot/cni/... -istio.test.skipVM true -p 1 -test.v 
          go test -tags=integ ./tests/integration/pilot/revisions/... -istio.test.skipVM true -p 1 -test.v go test -tags=integ -timeout 30m -run='TestStatsFilter|TestStatsTCPFilter|TestSetup|TestIstioctlMetrics|TestTcpMetric|TestStatsFilter|TestWASMTcpMetric|TestWasmStatsFilter|TestMain|TestCustomizeMetrics'  ./tests/integration/telemetry/stats/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/ca_custom_root/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/chiron/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/file_mounted_certs/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/filebased_tls_origination/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/mtls_first_party_jwt/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/mtlsk8sca/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/sds_egress/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/sds_tls_origination/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/webhook/... -istio.test.skipVM true -p 1 -test.v

      - name: eks-cluster-delete
        run: bash ./tetrateci/cleanup_eks_cluster.sh
  
  gke-e2e-test:
    strategy:
      matrix:
        os: [ ubuntu-latest ]

    name: gke-e2e-test
    runs-on: ${{ matrix.os }}
    needs: [create-test-images]
    env:
      HUB: hellozee-docker-istio-test.bintray.io

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: set up go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15

      - name: gke-cluster-create
        run: bash ./tetrateci/create_gke_cluster.sh

      - name: integration-tests
        run: |
          export TAG=$(git describe --tags)
          go test -tags=integ ./tests/integration/operator/...  -istio.test.skipVM true -p 1  -test.v
          go test -tags=integ ./tests/integration/helm/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ -timeout 30m -run='TestEmptyCluster|TestFileOnly|TestDirectoryWithoutRecursion|TestDirectoryWithRecursion|TestInvalidFileError|TestJsonInputFile|TestJsonOutput|TestKubeOnly|TestFileAndKubeCombined|TestAllNamespaces|TestTimeout|TestErrorLine|TestWait|TestVersion|TestDescribe|TestAddToAndRemoveFromMesh|TestProxyConfig|TestProxyStatus|TestAuthZCheck|TestLocality|TestMain|TestMirroring|TestMirroringExternalService|TestTproxy|TestRevisionedUpgrade|TestValidation|TestEnsureNoMissingCRDs|TestWebhook' ./tests/integration/pilot/ -istio.test.skipVM true -p 1 -test.v 
          go test -tags=integ ./tests/integration/pilot/analysis/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ ./tests/integration/pilot/revisions/... -istio.test.skipVM true -p 1 -test.v
          go test -count=1 -tags=integ ./tests/integration/pilot/cni/...  -istio.test.kube.helm.iopFile $(pwd)/tetrateci/iop-gke-integration.yml  -test.v
          go test -tags=integ -timeout 30m -run='TestStatsFilter|TestStatsTCPFilter|TestSetup|TestIstioctlMetrics|TestTcpMetric|TestStatsFilter|TestWASMTcpMetric|TestWasmStatsFilter|TestMain|TestCustomizeMetrics'  ./tests/integration/telemetry/stats/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/ca_custom_root/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/chiron/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/file_mounted_certs/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/filebased_tls_origination/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/mtls_first_party_jwt/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/mtlsk8sca/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/sds_egress/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/sds_tls_origination/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/webhook/... -istio.test.skipVM true -p 1 -test.v

      - name: gke-cluster-delete
        run: bash ./tetrateci/cleanup_gke_cluster.sh

  aks-e2e-test:
    strategy:
      matrix:
        os: [ ubuntu-latest ]

    name: aks-e2e-test
    runs-on: ${{ matrix.os }}
    needs: [create-test-images]
    env:
      HUB: hellozee-docker-istio-test.bintray.io

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 

      - name: set up go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15

      - name: aks-cluster-create
        run: bash ./tetrateci/create_aks_cluster.sh

      - name: integration-tests
        run: |
          export TAG=$(git describe --tags)
          go test -tags=integ ./tests/integration/operator/...  -istio.test.skipVM true -p 1  -test.v
          go test -tags=integ ./tests/integration/helm/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ -timeout 30m -run='TestEmptyCluster|TestFileOnly|TestDirectoryWithoutRecursion|TestDirectoryWithRecursion|TestInvalidFileError|TestJsonInputFile|TestJsonOutput|TestKubeOnly|TestFileAndKubeCombined|TestAllNamespaces|TestTimeout|TestErrorLine|TestWait|TestVersion|TestDescribe|TestAddToAndRemoveFromMesh|TestProxyConfig|TestProxyStatus|TestAuthZCheck|TestLocality|TestMain|TestMirroring|TestMirroringExternalService|TestTproxy|TestValidation|TestEnsureNoMissingCRDs|TestWebhook' ./tests/integration/pilot/ -istio.test.skipVM true -p 1 -test.v 
          go test -tags=integ ./tests/integration/pilot/analysis/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ ./tests/integration/pilot/revisions/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ -timeout 30m -run='TestStatsFilter|TestStatsTCPFilter|TestSetup|TestIstioctlMetrics|TestTcpMetric|TestStatsFilter|TestWASMTcpMetric|TestWasmStatsFilter|TestMain|TestCustomizeMetrics'  ./tests/integration/telemetry/stats/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/ca_custom_root/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/file_mounted_certs/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/filebased_tls_origination/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/mtls_first_party_jwt/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/mtlsk8sca/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/sds_egress/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/sds_tls_origination/... -istio.test.skipVM true -p 1 -test.v
          go test -tags=integ  ./tests/integration/security/webhook/... -istio.test.skipVM true -p 1 -test.v

      - name: aks-cluster-delete
        run: bash ./tetrateci/cleanup_aks_cluster.sh
    
  create-new-tag:
    name: create-new-tag
    runs-on: ubuntu-latest
    needs: [eks-e2e-test, gke-e2e-test, aks-e2e-test]
    if: ${{ !contains(github.ref, 'tetrate-v') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get the tag
        id: get_tag
        run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\/tetrate-test-/}
        shell: bash

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ steps.get_tag.outputs.TAG }}-tetrate-v0
          release_name: Tetrate Istio 
          draft: false
          prerelease: false

  make_release:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    
    needs: [create-new-tag]

    name: release-builder-run
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout tetrate branch
        uses: actions/checkout@v2

      - name: Login to Bintray
        uses: docker/login-action@v1
        with:
          registry: hellozee-docker-istio-temp.bintray.io # need to change this
          username: ${{ secrets.BINTRAY_USER }}
          password: ${{ secrets.BINTRAY_API_KEY }}

      - name: run release builder
        env:
          HUB: hellozee-docker-istio-temp.bintray.io
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          API_KEY: ${{ secrets.BINTRAY_API_KEY }}
        run: bash ./tetrateci/create_istio_release.sh

  make_release_for_patch:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    
    needs: [eks-e2e-test, gke-e2e-test, aks-e2e-test]

    name: release-builder-run
    runs-on: ${{ matrix.os }}
    if: ${{ contains(github.ref, 'tetrate-v') }}

    steps:
      - name: Checkout tetrate branch
        uses: actions/checkout@v2

      - name: Login to Bintray
        uses: docker/login-action@v1
        with:
          registry: hellozee-docker-istio-temp.bintray.io # need to change this
          username: ${{ secrets.BINTRAY_USER }}
          password: ${{ secrets.BINTRAY_API_KEY }}

      - name: run release builder
        env:
          HUB: hellozee-docker-istio-temp.bintray.io
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          API_KEY: ${{ secrets.BINTRAY_API_KEY }}
        run: bash ./tetrateci/create_istio_release.sh

version: 2

# Docker environment.
# defaults: &defaults
#   working_directory: /go/src/istio.io/istio
#   docker:
#     - image: gcr.io/istio-testing/build-tools:master-2019-12-04T21-25-52
#   environment:
#     GOPATH: /go
#     SKIP_CLEANUP: true
#     # Run garbage collection more aggresively to avoid getting OOMed during the lint phase.
#     GOGC: "20"
#     # Circle CI executor has many cores (> 30) but throttles CPU and RAM. If we don't limit
#     # this to the number of allocated cores, the job is likely to get OOMed and killed.
#     GOMAXPROCS: "2"

# org context settings. If developing on a clone, please configure:

# DOCKER_USER
# DOCKER_PASS
# HUB: ex istio, costinm (it is not the hub, but the dockerhub org or user)

jobs:
  # This job is triggered via API. expect env vars
  # DOCKER_USER, DOCKER_PASS, HUB, TAG
  dockerpush:
    working_directory: /home/circleci/istio
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run:
          name: setup ssh
          command: |
            mkdir -p ~/.ssh
            echo -e "\tStrictHostKeyChecking no" >> ~/.ssh/config
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: install go
          command: |
            export GOROOT=$(go env GOROOT)
            sudo rm -rf $(go env GOROOT)
            sudo mkdir -p $GOROOT
            curl -sSL https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz | \
            sudo tar xz -C $GOROOT --strip-components=1
      - checkout
      - run: make sync
      - run: VERSION=${VERSION} make docker.all
      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
      - run: VERSION=${VERSION} make push
  # dockerpush:
  #   <<: *defaults
  #   resource_class: xlarge
  #   steps:
  #     - run:
  #         name: setup ssh
  #         command: |
  #           mkdir -p /root/.ssh
  #           ssh-keyscan github.com >> /root/.ssh/known_hosts
  #     - checkout
  #     - run: make sync
  #     - run: VERSION=${VERSION} make build
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - run: VERSION=${VERSION} make docker.all
  #     - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
  #     - run: VERSION=${VERSION} make push

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master

    jobs:
      - test

version: 2

# Docker environment.
defaults: &defaults
  working_directory: /go/src/istio.io/istio
  docker:
    - image: gcr.io/istio-testing/build-tools:master-2019-11-14T12-01-13
  environment:
    GOPATH: /go
    SKIP_CLEANUP: true

# org context settings. If developing on a clone, please configure:

# DOCKER_USER
# DOCKER_PASS
# HUB: ex istio, costinm (it is not the hub, but the dockerhub org or user)

jobs:
  # This job is triggered via API. expect env vars
  # DOCKER_USER, DOCKER_PASS, HUB, TAG
  dockerpush:
    <<: *defaults
    steps:
      - run:
          name: setup ssh
          command: |
            mkdir -p ~/.ssh
            echo -e "\tStrictHostKeyChecking no" >> ~/.ssh/config
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: checkout code
          command: |            
            # use git+ssh instead of https
            git config --global url."ssh://git@github.com".insteadOf "https://github.com" || true
            mkdir -p /go/src/istio.io/istio
            cd /go/src/istio.io/istio
            git clone "$CIRCLE_REPOSITORY_URL" .

            if [ -n "$CIRCLE_TAG" ]
            then
              git fetch --force origin "refs/tags/${CIRCLE_TAG}"
            else
              git fetch --force origin "tcc:remotes/origin/tcc"
            fi

            if [ -n "$CIRCLE_TAG" ]
            then
              git reset --hard "$CIRCLE_SHA1"
              git checkout -q "$CIRCLE_TAG"
            elif [ -n "$CIRCLE_BRANCH" ]
            then
              git reset --hard "$CIRCLE_SHA1"
              git checkout -q -B "$CIRCLE_BRANCH"
            fi

            git reset --hard "$CIRCLE_SHA1"

      - run: make sync
      - run: VERSION=${VERSION} make build
      - setup_remote_docker:
          docker_layer_caching: true
      - run: VERSION=${VERSION} make docker.all
      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
      - run: VERSION=${VERSION} make push

workflows:
  version: 2
  jobs:
  - build

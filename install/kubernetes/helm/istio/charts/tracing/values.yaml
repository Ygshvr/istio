#
# addon jaeger tracing configuration
#
enabled: false

provider: jaeger
nodeSelector: {}
tolerations: []

# Specify the pod anti-affinity that allows you to constrain which nodes
# your pod is eligible to be scheduled based on labels on pods that are
# already running on the node rather than based on labels on nodes.
# There are currently two types of anti-affinity:
#    "requiredDuringSchedulingIgnoredDuringExecution"
#    "preferredDuringSchedulingIgnoredDuringExecution"
# which denote "hard" vs. "soft" requirements, you can define your values
# in "podAntiAffinityLabelSelector" and "podAntiAffinityTermLabelSelector"
# correspondingly.
# For example:
# podAntiAffinityLabelSelector:
# - key: security
#   operator: In
#   values: S1,S2
#   topologyKey: "kubernetes.io/hostname"
# This pod anti-affinity rule says that the pod requires not to be scheduled
# onto a node if that node is already running a pod with label having key
# "security" and value "S1".
podAntiAffinityLabelSelector: []
podAntiAffinityTermLabelSelector: []

jaeger:
  hub: docker.io/jaegertracing
  image: all-in-one
  tag: 1.12
  persist: false
  env:
    SPAN_STORAGE_TYPE: "badger"
    BADGER_EPHEMERAL: "false"
    BADGER_DIRECTORY_VALUE: "/badger/data"
    BADGER_DIRECTORY_KEY: "/badger/key"
    COLLECTOR_ZIPKIN_HTTP_PORT: "9411"
    MEMORY_MAX_TRACES: 50000
    QUERY_BASE_PATH: "/jaeger"

zipkin:
  hub: docker.io/openzipkin
  image: zipkin
  tag: 2.14.2
  probeStartupDelay: 200
  resources:
    limits:
      cpu: 300m
      memory: 900Mi
    requests:
      cpu: 150m
      memory: 900Mi
  env:
    STORAGE_METHOD: "mem"
  # From: https://github.com/openzipkin/zipkin/blob/master/zipkin-server/src/main/resources/zipkin-server-shared.yml#L51
  # Maximum number of spans to keep in memory.  When exceeded, oldest traces (and their spans) will be purged.
  # A safe estimate is 1K of memory per span (each span with 2 annotations + 1 binary annotation), plus
  # 100 MB for a safety buffer.  You'll need to verify in your own environment.
    ZIPKIN_STORAGE_MEM_MAXSPANS: "500000"
    QUERY_PORT: "9411"
    JAVA_OPTS: "-XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Xms700M -Xmx700M -XX:+UseG1GC -server"

service:
  annotations: {}
  name: http
  type: ClusterIP
  externalPort: 9411

ingress:
  enabled: false
  # Used to create an Ingress record.
  hosts:
    # - tracing.local
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: tracing-tls
    #   hosts:
    #     - tracing.local

